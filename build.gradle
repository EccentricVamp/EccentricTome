plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
    id 'com.modrinth.minotaur' version '2.+'
}

java.toolchain.languageVersion = JavaLanguageVersion.of java_version

version = "${minecraft_version}-${mod_version}"
group = mod_group
archivesBaseName = mod_id

// def mixinProperties = [
//     'mixin.env.remapRefMap'        : 'true',
//     'mixin.env.refMapRemappingFile': file('build/createSrgToMcp/output.srg')
// ]

def baseMods = {
    "${mod_id}" {
        source sourceSets.main
    }
}

minecraft {
    mappings channel: 'official', version: minecraft_version
    runs {
        client {
            taskName 'Client'
            workingDirectory file('run')
            // properties mixinProperties
            mods baseMods
        }

        server {
            taskName 'Server'
            workingDirectory file('run')
            // properties mixinProperties
            mods baseMods
        }
    }
}

// Testing
// repositories {
//     maven {
//         url 'https://maven.blamejared.com'
//         content {
//             includeGroup 'vazkii.patchouli'
//         }
//     }
//     maven {
//         url 'https://cursemaven.com'
//         content {
//             includeGroup 'curse.maven'
//         }
//     }
//     maven {
//         url 'https://maven.blakesmods.com'
//         content {
//             includeGroup 'com.blakebr0.cucumber'
//             includeGroup 'com.blakebr0.mysticalagriculture'
//         }
//     }
//     maven {
//         url 'https://nexus.twelveiterations.com/repository/maven-public'
//         content {
//             includeGroup 'net.blay09.mods'
//         }
//     }
//     maven {
//         url 'https://maven.pkg.github.com/CyclopsMC/packages'
//         content {
//             includeGroup 'org.cyclops.cyclopscore'
//             includeGroup 'org.cyclops.evilcraft'
//         }
//         credentials {
//             username System.getenv('GITHUB_ACTOR')
//             password System.getenv('GITHUB_TOKEN')
//         }
//     }
// }

dependencies {
    minecraft('net.minecraftforge:forge') { version { strictly "${minecraft_version}-${forge_version}" } }

    // Testing
    // runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${minecraft_version}-${patchouli_version}")

    // runtimeOnly fg.deobf("com.blakebr0.cucumber:Cucumber:${minecraft_version}-${cucumber_version}")
    // runtimeOnly fg.deobf("com.blakebr0.mysticalagriculture:MysticalAgriculture:${minecraft_version}-${mystical_agriculture_version}")

    // runtimeOnly fg.deobf("net.blay09.mods:balm-forge:${balm_version}+${minecraft_version}")
    // runtimeOnly fg.deobf("net.blay09.mods:cookingforblockheads-forge:${cfb_version}+${minecraft_version}")

    // runtimeOnly fg.deobf("org.cyclops.cyclopscore:cyclopscore:${minecraft_version}-${cyclopscore_version}")
    // runtimeOnly fg.deobf("org.cyclops.evilcraft:evilcraft:${minecraft_version}-${evilcraft_version}")

    // runtimeOnly fg.deobf('curse.maven:placebo-283644:4036338')
    // runtimeOnly fg.deobf('curse.maven:apotheosis-313970:4048780')
}

processResources {
    filesMatching('META-INF/mods.toml') {
        expand([
            minecraft_version: project.minecraft_version,
            mod_version: project.mod_version,
        ])
    }
}

jar.manifest.attributes = [
    'Specification-Title'     : mod_id,
    'Specification-Vendor'    : mod_author,
    'Specification-Version'   : '1',
    'Implementation-Title'    : project.name,
    'Implementation-Version'  : mod_version,
    'Implementation-Vendor'   : mod_author,
    'Implementation-Timestamp': new Date().format('yyyy-MM-dd\'T\'HH:mm:ssZ'),
]

jar.finalizedBy 'reobfJar'

curseforge {
    apiKey = System.getenv().CURSEFORGE_KEY ?: 'none'
    project {
        id = curseforge_project_id
        releaseType = curseforge_release_type
        addGameVersion 'Forge'
        addGameVersion minecraft_version
        addGameVersion "Java ${java_version}"
        mainArtifact jar
    }
}

modrinth {
    token = System.getenv().MODRINTH_TOKEN ?: 'none'
    projectId = modrinth_project_id
    versionType = modrinth_release_type
    gameVersions = [minecraft_version]
    uploadFile = jar
}